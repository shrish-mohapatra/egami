{"version":3,"sources":["components/layout/About.js","components/layout/GalleryImage.js","components/Provider.js","components/layout/Gallery.js","components/layout/Hero.js","components/AppRouter.js","components/modals/AuthModal.js","components/layout/Header.js","components/layout/HomeLayout.js","components/modals/UploadModal.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","GalleryImage","image","index","useState","hover","setHover","onMouseEnter","onMouseLeave","alt","title","src","cloudURL","author","DEV_URL","CoreContext","createContext","CoreProvider","children","token","setToken","user","setUser","uploadVisible","setUploadVisible","updateAuth","result","localStorage","setItem","JSON","stringify","useEffect","getItem","parse","localAuth","Provider","value","fetchImages","a","axios","get","data","results","console","log","message","notification","description","placement","uploadImage","args","file","formData","FormData","append","Object","keys","map","field","post","headers","window","location","reload","response","authenticate","authType","name","logout","clear","Gallery","useContext","cols","setCols","loadImages","images","tempCols","colIndex","i","push","col","span","Hero","sm","md","AppRouter","props","exact","path","component","AuthModal","visible","handleOk","handleCancel","formType","setFormType","formRef","useRef","onFinish","current","getFieldsValue","resetFields","forms","login","ref","Item","rules","required","id","prefix","MailOutlined","placeholder","LockOutlined","type","style","float","noStyle","href","htmlType","block","textAlign","onClick","signup","UserOutlined","onOk","onCancel","footer","width","Header","setVisible","setAuthType","showModal","Layout","target","Dragger","Upload","UploadModal","setFile","TextArea","rows","accept","customRequest","onSuccess","multiple","InboxOutlined","App","HomeLayout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc293d96.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction About() {\r\n\r\n  return (\r\n    <div className=\"about-page\">\r\n      <h1>About</h1>\r\n      <p><b>Egami</b> is an image repository application where users can upload and view pictures.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React, { useState } from 'react';\r\n// import {Row, Col} from 'antd';\r\n\r\nfunction GalleryImage({image, index}) {\r\n  const [hover, setHover] = useState(false)\r\n\r\n  return (\r\n      <div\r\n        key={\"gallery-img-div-\"+index}\r\n        className=\"gallery-img-div\"\r\n        onMouseEnter={() => setHover(true)}\r\n        onMouseLeave={() => setHover(false)}\r\n      >\r\n          <img\r\n            className=\"gallery-img\"\r\n            alt={image.title}\r\n            key={\"gallery-img-\"+index}\r\n            src={image.cloudURL}\r\n            \r\n          />\r\n          <div className=\"img-meta\">\r\n            <p className=\"img-title\">{hover ? image.title : ''}</p>\r\n            <p className=\"img-author\">{hover ? image.author : ''}</p>\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default GalleryImage;","import React, { createContext, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { notification } from 'antd'\r\n\r\nconst DEV_URL = \"http://localhost:5000\"\r\n\r\nexport const CoreContext = createContext()\r\n\r\nexport const CoreProvider = ({children}) => {\r\n    const [token, setToken] = useState(null)\r\n    const [user, setUser] = useState(null)\r\n\r\n    const [uploadVisible, setUploadVisible] = useState(false)\r\n\r\n    const updateAuth = (result) => {\r\n        localStorage.setItem('token', result.token)\r\n        localStorage.setItem('user', JSON.stringify(result.user))\r\n\r\n        setToken(result.token)\r\n        setUser(result.user)\r\n    }\r\n\r\n    const localAuth = () => {\r\n        const token = localStorage.getItem('token')\r\n        const user = JSON.parse(localStorage.getItem('user'))\r\n\r\n        if(token && user) {\r\n            setToken(token)\r\n            setUser(user)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        localAuth();\r\n    }, [])\r\n\r\n    return(\r\n        <CoreContext.Provider\r\n            value={{\r\n                token,\r\n                user,\r\n                \r\n                setToken,\r\n                setUser,\r\n\r\n                uploadVisible,\r\n                setUploadVisible,\r\n\r\n                fetchImages: async() => {\r\n                    try {\r\n                        const result = await axios.get(DEV_URL + \"/api/image/get\");\r\n                        return result.data.results\r\n                    } catch(error) {\r\n                        console.log(error.message)\r\n                        \r\n                        notification['error']({\r\n                            message: 'Something went wrong',\r\n                            description: \"Unable to fetch images from server.\",\r\n                            placement: \"bottomLeft\"\r\n                        })\r\n\r\n                        return []\r\n                    }\r\n                },\r\n\r\n                uploadImage: async(args, file) => {\r\n                    let formData = new FormData()\r\n                    formData.append(\"upload\", file)\r\n\r\n                    Object.keys(args).map(field => formData.append(field, args[field]))\r\n                    \r\n                    try {\r\n                        await axios.post(\r\n                            DEV_URL + \"/api/image/create\",\r\n                            formData,\r\n                            {\r\n                                headers: {\r\n                                    'Content-Type': 'multipart/form-data',\r\n                                    token\r\n                                }\r\n                            }\r\n                        )\r\n\r\n                        notification['success']({\r\n                            message: 'File Upload Success',\r\n                            placement: \"bottomLeft\"\r\n                        })\r\n\r\n                        window.location.reload(false);\r\n                    } catch(error) {\r\n                        console.log(error.response.data)\r\n                        notification['error']({\r\n                            message: 'File Upload Error',\r\n                            description: \"Unable to upload image.\",\r\n                            placement: \"bottomLeft\"\r\n                        })\r\n                    }\r\n                },\r\n                \r\n                authenticate: async(args) => {\r\n                    try {\r\n                        const result = await axios.post(\r\n                            DEV_URL + \"/api/user/\" + args.authType,\r\n                            args\r\n                        )\r\n\r\n                        updateAuth(result.data)\r\n\r\n                        notification['success']({\r\n                            message: 'Welcome ' + result.data.user.name,\r\n                            placement: \"bottomLeft\"\r\n                        })\r\n\r\n                    } catch(error) {\r\n                        console.log(error.response.data.message)\r\n\r\n                        notification['error']({\r\n                            message: 'Authentication Error',\r\n                            description: error.response.data.message,\r\n                            placement: \"bottomLeft\"\r\n                        })\r\n                    }\r\n                },\r\n\r\n                logout: () => {\r\n                    setUser(null);\r\n                    setToken(null);\r\n\r\n                    localStorage.clear();\r\n                },\r\n            }}\r\n        >\r\n            {children}\r\n        </CoreContext.Provider>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport {Row, Col} from 'antd';\r\nimport GalleryImage from './GalleryImage';\r\nimport { CoreContext } from '../Provider';\r\n\r\nconst COLUMN_COUNT = 3\r\n\r\nfunction Gallery() {\r\n    const { fetchImages } = useContext(CoreContext)\r\n    const [cols, setCols] = useState(null)   \r\n\r\n    useEffect(() => {\r\n        if(!cols) {\r\n            loadImages()\r\n        }\r\n    }, [cols])\r\n\r\n    const loadImages = async () => {\r\n        const images = await fetchImages()\r\n\r\n        let tempCols = []\r\n        let colIndex = 0\r\n\r\n        for(let i=0; i<COLUMN_COUNT; i++) {\r\n            tempCols.push([])\r\n        }\r\n\r\n        images.map((image, index) => {\r\n            tempCols[colIndex++].push(image)\r\n            if(colIndex === COLUMN_COUNT) colIndex = 0;\r\n            return\r\n        })\r\n\r\n        setCols(tempCols)\r\n    }\r\n    \r\n\r\n    if(!cols) return <div/>\r\n    \r\n    return (\r\n        <Row>\r\n            {\r\n                cols.map((col, colIndex) => (\r\n                    <Col key={`col-${colIndex}`} span={8}>\r\n                        {\r\n                            col.map((image, index) => (\r\n                                <GalleryImage key={\"gal-img\"+index} image={image} index={index}/>\r\n                            ))\r\n                        }\r\n                    </Col>\r\n                ))\r\n            }\r\n            \r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport {Row, Col} from 'antd';\r\n\r\nfunction Hero() {\r\n\r\n  return (\r\n    <Row className=\"hero\">\r\n      <Col\r\n        className=\"hero-text\"\r\n        sm={24} md={12}\r\n    >\r\n          <p className=\"hero-title\">Upload and browse stunning images.</p>\r\n          <p className=\"hero-desc\">\r\n              Developed by Shrish Mohapatra for the Summer 2021 Shopify Developer Intern Challenge.\r\n          </p>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Hero;","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport About from './layout/About'\r\nimport Gallery from './layout/Gallery'\r\nimport Hero from './layout/Hero'\r\n\r\nconst AppRouter = (props) => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={() => (<>\r\n            <Hero/>            \r\n            <Gallery/>\r\n        </>)}/>\r\n        <Route path=\"/home\" component={() => (<>\r\n            <Hero/>            \r\n            <Gallery/>\r\n        </>)}/>\r\n        <Route path=\"/about\" component={About}/>\r\n    </Switch>\r\n)\r\n\r\nexport default AppRouter","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { Form, Input, Checkbox, Modal, Button } from 'antd';\r\nimport { UserOutlined, MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { CoreContext } from '../Provider';\r\n\r\n\r\nfunction AuthModal({visible, authType, handleOk, handleCancel}){\r\n    const [formType, setFormType] = useState('login')\r\n    const { authenticate } = useContext(CoreContext);\r\n    const formRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if(authType !== formType) {\r\n            setFormType(authType)\r\n        }\r\n    }, [authType, visible])\r\n\r\n    const onFinish = async () => {\r\n        const formData = formRef.current.getFieldsValue()\r\n        await authenticate({\r\n            ...formData,\r\n            authType\r\n        })\r\n\r\n        formRef.current.resetFields()\r\n\r\n        handleOk()\r\n    }\r\n\r\n    const forms = {\r\n        login: (\r\n            <div>\r\n                <h2>Login</h2>\r\n                <p>Login using credentials entered during registration.</p>\r\n\r\n                <Form onFinish={onFinish} ref={formRef}>\r\n                    <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input email.'}]}>\r\n                        <Input id='email' prefix={<MailOutlined/>} placeholder=\"Email\"/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input password.'}]}>\r\n                        <Input id='password' prefix={<LockOutlined/>} placeholder=\"Password\" type=\"password\"/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Form.Item style={{float: 'left'}} noStyle>\r\n                            <Checkbox id='remember'>Remember me</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        <a href=\"/\" style={{float: 'right'}}>Forgot Password?</a>\r\n                    </Form.Item>\r\n\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"auth-btn\"\r\n                        block\r\n                    >\r\n                        Login\r\n                    </Button>\r\n\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <span>\r\n                            Don't have an account? \r\n                            <a onClick={() => setFormType(\"signup\")}> Signup</a>\r\n                        </span>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        ),\r\n\r\n        signup: (\r\n            <div>\r\n                <h2>Signup</h2>\r\n                <p>Create an account to start uploading your own images.</p>\r\n\r\n                <Form onFinish={onFinish} ref={formRef}>\r\n                    <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input a name.'}]}>\r\n                        <Input id='name' prefix={<UserOutlined/>} placeholder=\"Name\"/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input email.'}]}>\r\n                        <Input id='email' prefix={<MailOutlined/>} placeholder=\"Email\"/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input password.'}]}>\r\n                        <Input id='password' prefix={<LockOutlined/>} placeholder=\"Password\" type=\"password\"/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"confirm_password\" rules={[{ required: true, message: 'Please confirm password.'}]}>\r\n                        <Input id='confirm_password' prefix={<LockOutlined/>} placeholder=\"Confirm Password\" type=\"password\"/>\r\n                    </Form.Item>\r\n\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"auth-btn\"\r\n                        block\r\n                    >\r\n                        Signup\r\n                    </Button>\r\n\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <span>\r\n                            Already have an account? \r\n                            <a onClick={() => setFormType(\"login\")}> Login</a>\r\n                        </span>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        ),\r\n    }\r\n\r\n    return(\r\n        <Modal\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={null}\r\n            className=\"auth-modal\"\r\n            width={400}\r\n        >\r\n            {forms[formType]}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AuthModal;","import React, { useContext, useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport AuthModal from '../modals/AuthModal';\r\nimport { CoreContext } from '../Provider';\r\n\r\nfunction Header() {\r\n    const [visible, setVisible] = useState(false);\r\n    const [authType, setAuthType] = useState('signup');\r\n    const { token, setUploadVisible, logout } = useContext(CoreContext);\r\n\r\n    const showModal = (formType) => {\r\n        setAuthType(formType)\r\n        setVisible(true)\r\n    }\r\n\r\n    const handleOk = () => {\r\n        return handleCancel();\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setVisible(false)\r\n    }\r\n\r\n    const renderButtonGroup = () => {\r\n        if(token) {\r\n            return(\r\n                <div className=\"navbtn-group\">\r\n                    <Button\r\n                        className=\"navbtn\"\r\n                        onClick={logout}\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                    <Button\r\n                        className=\"navbtn\"\r\n                        type=\"primary\"\r\n                        onClick={() => setUploadVisible(true)}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div className=\"navbtn-group\">\r\n                    <Button\r\n                        className=\"navbtn\"\r\n                        onClick={() => showModal('login')}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                    <Button\r\n                        className=\"navbtn\"\r\n                        type=\"primary\"\r\n                        onClick={() => showModal('signup')}\r\n                    >\r\n                        Signup\r\n                    </Button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <div className=\"navbar-group\">\r\n                    <div className=\"title-div\">\r\n                        <span className=\"title\">egami</span>                        \r\n                    </div>\r\n                </div>\r\n\r\n                {renderButtonGroup()}\r\n            </div>\r\n\r\n            <AuthModal\r\n                visible={visible}\r\n                authType={authType}\r\n                handleOk={handleOk}\r\n                handleCancel={handleCancel}\r\n            />\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport AppRouter from '../AppRouter';\r\nimport Header from './Header';\r\n\r\nfunction Layout() {\r\n  return (\r\n    <div className=\"layout\">\r\n      <BrowserRouter>\r\n      <Header/>\r\n\r\n      <AppRouter/>\r\n\r\n      <div className=\"footer\">\r\n        <p>Developed by <a href=\"https://github.com/shrish-mohapatra\" target=\"_blank\">Shrish Mohapatra</a></p>\r\n      </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;","import React, { useContext, useRef, useState } from 'react';\r\nimport { Modal, Form, Input, Button, Upload } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport { CoreContext } from '../Provider';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nfunction UploadModal() {\r\n    const { uploadVisible, setUploadVisible, uploadImage, } = useContext(CoreContext);\r\n    const formRef = useRef();\r\n    const [file, setFile] = useState(false);\r\n\r\n    const onFinish = async() => {\r\n        const formData = formRef.current.getFieldsValue()\r\n\r\n        await uploadImage(formData, file)\r\n        setUploadVisible(false)\r\n    }\r\n\r\n    const prepareFile = ({file, onSuccess}) => {\r\n        setFile(file)\r\n        onSuccess(\"Ok\")\r\n    }\r\n\r\n    return(\r\n        <Modal\r\n            visible={uploadVisible}\r\n            onOk={uploadImage}\r\n            onCancel={() => setUploadVisible(false)}\r\n            footer={null}\r\n        >\r\n            <h2>Upload Image</h2>\r\n            <p>Showcase your images by uploading them to our cloud storage.</p>\r\n\r\n            <Form onFinish={onFinish} ref={formRef}>\r\n                <Form.Item name=\"title\" rules={[{ required: true, message: 'Please enter a title.'}]}>\r\n                    <Input id='title' placeholder=\"Title\"/>\r\n                </Form.Item>\r\n\r\n                <Form.Item name=\"description\">\r\n                    <Input.TextArea id='description' placeholder=\"Description\" rows={3}/>\r\n                </Form.Item>\r\n\r\n                <Dragger\r\n                    name=\"file\"\r\n                    accept=\"image/png, image/jpeg\"\r\n                    customRequest={prepareFile}\r\n                    multiple={false}\r\n                    className=\"upload-field\"\r\n                >\r\n                    <InboxOutlined/>\r\n                    <p>Drag and drop your images here to upload</p>\r\n                </Dragger>\r\n\r\n                <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"auth-btn upload-btn\"\r\n                >\r\n                    Upload\r\n                </Button>\r\n            </Form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default UploadModal;","import './App.less';\nimport 'antd/dist/antd.less'\n\nimport HomeLayout from './components/layout/HomeLayout';\nimport { CoreProvider } from './components/Provider'\nimport UploadModal from './components/modals/UploadModal';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <CoreProvider>\n        <HomeLayout/>\n        <UploadModal/>\n      </CoreProvider>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}